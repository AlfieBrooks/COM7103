services:
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 10s
      start_period: 10s
      retries: 3
    networks:
      - shared

  api:
    build:
      context: .
      dockerfile: ./apps/api/Dockerfile
      args:
        PROJECT: api
    depends_on:
      rabbitmq:
        condition: service_healthy
    ports:
      - 5000:5000
    env_file:
      - ./apps/api/.env
    environment:
      - RABBITMQ_URL=amqp://rabbitmq:5672
      - IMAGE_API_URL=http://nginx/image-generator/api/v1
    healthcheck:
      test: curl --fail http://localhost:5000/health || exit 1
      interval: 10s
      timeout: 10s
      start_period: 10s
      retries: 3
    networks:
      - shared

  image-generator:
    build:
      context: .
      dockerfile: ./apps/image-generator/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    ports:
      - 4000:4000
    env_file:
      - ./apps/image-generator/.env
    environment:
      - RABBITMQ_URL=amqp://rabbitmq:5672
    healthcheck:
      test: curl --fail http://localhost:4000/health || exit 1
      interval: 10s
      timeout: 10s
      start_period: 10s
      retries: 3
    networks:
      - shared

  frontend:
    build:
      context: .
      dockerfile: ./apps/frontend/Dockerfile
    depends_on:
      - api
      - image-generator
    ports:
      - 3000:3000
    env_file:
      - ./apps/frontend/.env
    environment:
      - VITE_API_URL=http://nginx/api/api/v1
      - VITE_IMAGE_API_URL=http://nginx/image-generator/api/v1
    # healthcheck:
    #   test: curl --fail http://localhost:3000/ || exit 1
    #   interval: 10s
    #   timeout: 10s
    #   retries: 3
    networks:
      - shared

  nginx:
    image: nginx:latest
    container_name: nginx
    depends_on:
      api:
        condition: service_healthy
      image-generator:
        condition: service_healthy
      frontend:
        condition: service_started
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 80:80
    networks:
      - shared

networks:
  shared:
    driver: bridge
